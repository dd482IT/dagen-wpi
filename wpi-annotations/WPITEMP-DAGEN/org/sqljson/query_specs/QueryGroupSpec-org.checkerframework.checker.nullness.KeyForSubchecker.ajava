package org.sqljson.query_specs;

import java.util.ArrayList;
import java.util.List;
import static java.util.Collections.emptyList;
import static java.util.Collections.unmodifiableList;
import org.checkerframework.checker.nullness.qual.Nullable;
import static org.sqljson.query_specs.PropertyNameDefault.CAMELCASE;

@org.checkerframework.framework.qual.AnnotatedFor("org.checkerframework.checker.nullness.KeyForSubchecker")
public final class QueryGroupSpec {

    private  String defaultSchema = null;

    private  PropertyNameDefault propertyNameDefault = CAMELCASE;

    private  List<String> generateUnqualifiedNamesForSchemas = emptyList();

    private  List<QuerySpec> querySpecs = emptyList();

    @org.checkerframework.dataflow.qual.SideEffectFree
    private QueryGroupSpec() {
    }

    public QueryGroupSpec(String defaultSchema, PropertyNameDefault propertyNameDefault, List<String> generateUnqualifiedNamesForSchemas, List<QuerySpec> querySpecs) {
        this.defaultSchema = defaultSchema;
        this.propertyNameDefault = propertyNameDefault;
        this.generateUnqualifiedNamesForSchemas = generateUnqualifiedNamesForSchemas;
        this.querySpecs = unmodifiableList(new ArrayList<>(querySpecs));
    }

    @org.checkerframework.dataflow.qual.Pure
    public  String getDefaultSchema( QueryGroupSpec this) {
        return defaultSchema;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  PropertyNameDefault getPropertyNameDefault( QueryGroupSpec this) {
        return propertyNameDefault;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  List<String> getGenerateUnqualifiedNamesForSchemas( QueryGroupSpec this) {
        return generateUnqualifiedNamesForSchemas;
    }

    @org.checkerframework.dataflow.qual.Pure
    public  List<QuerySpec> getQuerySpecs( QueryGroupSpec this) {
        return querySpecs;
    }
}
